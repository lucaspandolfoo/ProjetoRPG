/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import ferramentas.CaixaDeDialogo;
import ferramentas.Global;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.paint.Color.color;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import modelo.Oponente;
import modelo.Personagem;

/**
 *
 * @author lucas.pandolfo
 */
public class ViewConfronto extends javax.swing.JFrame {
   Personagem personagem;
   Oponente op;
   Oponente[] oponentes = new Oponente[5];
   Random gerador = new Random();
   public static int ataque = 0;
   public static Timer tempo;
   public int valorDadoJogar;
   public static int x;
   public static String ataqueCritico = "";
   public static int vidaMaximaOponente = 0, vidaMaximaPersonagem =0;
   public static int qtdeDerrotas = 0;
    /**
     * Creates new form ViewConfronto
     */
    public ViewConfronto(Personagem personagemEscolhido) throws IOException {
        ajustaCor();
        
        initComponents();
        limparLabels();
        this.personagem = personagemEscolhido;
        this.getContentPane().setBackground(ViewPersonagem.pegaCor()); 
        JrSkill1.setBackground(ViewPersonagem.pegaCor());
        JrSkill2.setBackground(ViewPersonagem.pegaCor());
        JrSkill3.setBackground(ViewPersonagem.pegaCor());
        skillsPersonagem(); //Mostra as skills dos personagens
        mostrarPersonagem(); //Preenche os dados do personagem
        vidaMaximaPersonagem = personagem.getVida();
       // gerarOponente(); // Gera um novo oponente
        op = gerarOponente(); // pega o oponente que foi gerado
        vidaMaximaOponente = op.getVida(); //Pega a vida máxima do oponente quando gerado
        mostrarOponente(); //Preenche os dados do oponente
        //Seta a imagem do Personagem
        lblImagemP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/personagens/"+personagem.getClasse().toLowerCase()+".png")));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoSkills = new javax.swing.ButtonGroup();
        lblNomeP = new javax.swing.JLabel();
        lblAtaqueP = new javax.swing.JLabel();
        lblVidaP = new javax.swing.JLabel();
        txtNomeP = new javax.swing.JLabel();
        txtAtaqueP = new javax.swing.JLabel();
        lblClasseP = new javax.swing.JLabel();
        txtClasseP = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblBatalha = new javax.swing.JLabel();
        lblNivelP = new javax.swing.JLabel();
        txtNivelP = new javax.swing.JLabel();
        lblAtaqueB = new javax.swing.JLabel();
        lblVidaB = new javax.swing.JLabel();
        txtNomeB = new javax.swing.JLabel();
        txtAtaqueB = new javax.swing.JLabel();
        lblNomeB = new javax.swing.JLabel();
        lblAtkPersonagem = new javax.swing.JLabel();
        lblAtkOponente = new javax.swing.JLabel();
        lblVezOponente = new javax.swing.JLabel();
        lblVezPersonagem = new javax.swing.JLabel();
        txtDescB = new javax.swing.JLabel();
        lblImagemB = new javax.swing.JLabel();
        lblImagemP = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        JrSkill1 = new javax.swing.JRadioButton();
        JrSkill2 = new javax.swing.JRadioButton();
        JrSkill3 = new javax.swing.JRadioButton();
        lblSkill3 = new javax.swing.JLabel();
        lblSkill1 = new javax.swing.JLabel();
        lblSkill2 = new javax.swing.JLabel();
        btnDuelo = new javax.swing.JButton();
        btnAtacar = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        prbVidaOponente = new javax.swing.JProgressBar();
        prbVidaPersonagem = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        prbExperiencia = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Campo de Batalha");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblNomeP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNomeP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/usuario.png"))); // NOI18N
        lblNomeP.setText("Nome:");
        lblNomeP.setToolTipText("Nome do Personagem");

        lblAtaqueP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAtaqueP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ataque.png"))); // NOI18N
        lblAtaqueP.setText("Ataque:");
        lblAtaqueP.setToolTipText("Ataque do Personagem");

        lblVidaP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblVidaP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/coracao.png"))); // NOI18N
        lblVidaP.setText("Vida:");
        lblVidaP.setToolTipText("Vida do Personagem");

        txtNomeP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtAtaqueP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblClasseP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblClasseP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/classe.png"))); // NOI18N
        lblClasseP.setText("Classe:");
        lblClasseP.setToolTipText("Classe do Personagem");

        txtClasseP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblBatalha.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        lblBatalha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBatalha.setText("Campo de Batalha");

        lblNivelP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNivelP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/nivel.png"))); // NOI18N
        lblNivelP.setText("Nível:");
        lblNivelP.setToolTipText("Nível do Personagem");

        txtNivelP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblAtaqueB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAtaqueB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ataque.png"))); // NOI18N
        lblAtaqueB.setText("Ataque:");
        lblAtaqueB.setToolTipText("Ataque do Oponente");

        lblVidaB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblVidaB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/coracao.png"))); // NOI18N
        lblVidaB.setText("Vida:");
        lblVidaB.setToolTipText("Vida do Oponente");

        txtNomeB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtAtaqueB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblNomeB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNomeB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/boss.png"))); // NOI18N
        lblNomeB.setText("Nome:");
        lblNomeB.setToolTipText("Nome do Oponente");

        lblAtkPersonagem.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblAtkPersonagem.setText("Ataque do Personagem");

        lblAtkOponente.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblAtkOponente.setText("Ataque do Oponente");

        lblVezOponente.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblVezOponente.setText("Vez de seu oponente atacar");

        lblVezPersonagem.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblVezPersonagem.setText("Sua vez de atacar");

        txtDescB.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        txtDescB.setToolTipText("Mensagem do Oponente");
        txtDescB.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem:"));

        lblImagemB.setToolTipText("Imagem do Oponente");

        lblImagemP.setToolTipText("Imagem do Personagem");

        lblX.setFont(new java.awt.Font("Tahoma", 1, 140)); // NOI18N
        lblX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblX.setText("X");

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/sign-error.png"))); // NOI18N
        btnSair.setText("Sair da Batalha");
        btnSair.setToolTipText("Voltar para tela de seleção");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        GrupoSkills.add(JrSkill1);

        GrupoSkills.add(JrSkill2);

        GrupoSkills.add(JrSkill3);

        lblSkill3.setToolTipText("Espada Voadora, o personagem salta por cima do oponente e coloca toda sua força em seu equipamento, as chances do ataque ser crítico são médias.");
        lblSkill3.setPreferredSize(new java.awt.Dimension(50, 50));

        lblSkill1.setToolTipText("Fogo congelante, é um ataque que baseia-se em prever os movimentos do oponente apenas para tentar um contra-ataque, um ataque crítico nessas condições é quase impossível.");

        lblSkill2.setToolTipText("Golpe do Dragão, ataca o oponente pelas costas imobilizando por 3 segundos, há uma grande chance de ocorrer um ataque crítico.");

        btnDuelo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDuelo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/duelo.png"))); // NOI18N
        btnDuelo.setText("Duelar");
        btnDuelo.setToolTipText("Iniciar um Duelo");
        btnDuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDueloActionPerformed(evt);
            }
        });

        btnAtacar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnAtacar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/atacar.png"))); // NOI18N
        btnAtacar.setText("Atacar");
        btnAtacar.setToolTipText("Atacar o Oponente");
        btnAtacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtacarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ataques:");

        prbVidaOponente.setBackground(new java.awt.Color(255, 255, 255));
        prbVidaOponente.setForeground(new java.awt.Color(255, 0, 0));
        prbVidaOponente.setMaximum(0);
        prbVidaOponente.setToolTipText("");
        prbVidaOponente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        prbVidaOponente.setString("50");

        prbVidaPersonagem.setBackground(new java.awt.Color(255, 255, 255));
        prbVidaPersonagem.setForeground(new java.awt.Color(255, 0, 0));
        prbVidaPersonagem.setMaximum(0);
        prbVidaPersonagem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Experiência:");

        prbExperiencia.setBackground(new java.awt.Color(255, 255, 255));
        prbExperiencia.setForeground(new java.awt.Color(153, 0, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblVezOponente, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAtkOponente, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(60, 60, 60))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblImagemB, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNomeB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNomeB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(lblVidaB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(prbVidaOponente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblAtaqueB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtAtaqueB, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(txtDescB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(19, 19, 19)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(80, 80, 80)
                                    .addComponent(lblSkill3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31)
                                    .addComponent(lblSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(JrSkill1)
                                            .addGap(57, 57, 57)
                                            .addComponent(JrSkill2)
                                            .addGap(63, 63, 63)
                                            .addComponent(JrSkill3))))
                                .addComponent(lblAtkPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblVezPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblNivelP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNivelP, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblAtaqueP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAtaqueP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblNomeP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNomeP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblClasseP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtClasseP, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblVidaP)
                                                .addGap(10, 10, 10)
                                                .addComponent(prbVidaPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(prbExperiencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblImagemP, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblX, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDuelo))
                        .addGap(586, 586, 586))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblBatalha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(btnAtacar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblBatalha)
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblX, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lblImagemB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lblNomeB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(txtNomeB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtAtaqueB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblAtaqueB))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblVidaB)
                                                    .addComponent(prbVidaOponente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(16, 16, 16)
                                                .addComponent(txtDescB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(35, 35, 35))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNomeP)
                                    .addComponent(txtNomeP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblClasseP)
                                    .addComponent(txtClasseP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNivelP)
                                    .addComponent(txtNivelP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAtaqueP)
                                    .addComponent(txtAtaqueP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblVidaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(prbVidaPersonagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prbExperiencia, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImagemP, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblVezPersonagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAtkPersonagem))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(btnDuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JrSkill1)
                            .addComponent(JrSkill2)
                            .addComponent(JrSkill3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblVezOponente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAtkOponente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblSkill3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSkill2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(btnAtacar)
                .addGap(10, 10, 10)
                .addComponent(btnSair)
                .addGap(21, 21, 21))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        boolean wResposta = CaixaDeDialogo.obterinstancia().pedirConfirmacao("Atenção, você deseja abandonar a luta?","Sair",'p');         
        if (wResposta == true) {
        this.dispose();
       ViewPersonagem telaP = new ViewPersonagem(personagem);
       telaP.setVisible(true);
        } else {
            return;
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnDueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDueloActionPerformed
        // TODO add your handling code here:
        valorDadoJogar = gerador.nextInt(2) + 1;
        if (valorDadoJogar == 1) {
        lblVezPersonagem.setText("Sua Vez de Atacar");  
        lblVezOponente.setText("");
        lblAtkOponente.setText("");
        lblAtkPersonagem.setText("");
        btnAtacar.setSelected(false);
    } else {
        btnAtacar.setSelected(true);
        lblVezOponente.setText("É a vez de seu oponente atacar"); 
        lblVezPersonagem.setText("");
        lblAtkPersonagem.setText("");
        System.out.println("Ataque do seu oponente: "  + valorDadoJogar);
        ataqueOponente();
        GrupoSkills.clearSelection(); // Limpa a skill que foi selecionada
        mostrarPersonagem();   
        validarVida();  //Valida se o personagem não ficou sem vida
        }
        
    }//GEN-LAST:event_btnDueloActionPerformed

    private void btnAtacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtacarActionPerformed
        // TODO add your handling code here:
        //Valida se é a vez do usuário de jogar
        if (valorDadoJogar != 1) {
            CaixaDeDialogo.obterinstancia().exibirMensagem("Aguarde sua vez de jogar ou inicie o duelo!","Atenção",'i');  
            btnAtacar.setSelected(true);
            return;
        }
        if (valorDadoJogar == 1) {
        System.out.println("Ataque do seu personagem: " + valorDadoJogar);
        if (!JrSkill1.isSelected() && !JrSkill2.isSelected()  && !JrSkill3.isSelected()) {
             CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha um ataque!","Atenção",'i');
             btnAtacar.setSelected(false);
             return;
        }  else {
        ataquePersonagem();
        mostrarOponente();
        valorDadoJogar = 3; // Não deixa o personagem atacar 2 vezes seguidas é preciso jogar o dado antes.
          }
 
        //Valida se o oponente já morreu e gera um novo para lutar.
        if (oponentes[x].getVida() > 0) {
        mostrarOponente();
        } else {
        mostrarOponente();
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns, você derrotou o oponente " + oponentes[x].getNome()+"!","Parabéns",'i');
        personagem.setExperiencia(personagem.getExperiencia()+150);
        upaNivel(personagem.getExperiencia());
        vidaMaximaPersonagem = personagem.getVida();
        mostrarPersonagem(); //Mostra o personagem com a vida atualizada
        vidaMenor200(); //Valida se o personagem não ficou com a vida menor que 200
        gerarOponente();
        op = gerarOponente();
        vidaMaximaOponente = op.getVida();
        prbVidaOponente.setMaximum(vidaMaximaOponente);
        mostrarOponente();
        limparLabels();
        mostrarPersonagem();
        }
        }
    }//GEN-LAST:event_btnAtacarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        mostrarPersonagem();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewConfronto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewConfronto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewConfronto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewConfronto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewConfronto(null).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ViewConfronto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
  private Oponente gerarOponente () {
       int numero = gerador.nextInt(5);
    try {    
    // +1 não deixa gerar 0
   // int numero = gerador.nextInt(4);
        System.out.println("OPONENTE GERADO: " + numero);
       
        oponentes[0] = new Oponente();
        oponentes[0].setNome("Mandala");
        oponentes[0].setVida(400);
        oponentes[0].setAtaque(300);  
        oponentes[0].setDescricao("<html> Será que você consegue derrotar o Rei voador? <br> por: " + oponentes[0].getNome() + "</html>");
                
        oponentes[1] = new Oponente();
        oponentes[1].setNome("Rei Trator");
        oponentes[1].setVida(1000);
        oponentes[1].setAtaque(300);    
        oponentes[1].setDescricao("<html> Preparado para perder? <br> por: " + oponentes[1].getNome() + "</html>");
        
        oponentes[2] = new Oponente();
        oponentes[2].setNome("Corcel do Inferno");
        oponentes[2].setVida(300);
        oponentes[2].setAtaque(500);    
        oponentes[2].setDescricao("<html> Demonstre sua força para mim. <br> por: " + oponentes[2].getNome()+ "</html>");
        
        oponentes[3] = new Oponente();
        oponentes[3].setNome("Lorden");
        oponentes[3].setVida(500);
        oponentes[3].setAtaque(200);    
        oponentes[3].setDescricao("<html> Espero que esteja preparado para a glória! <br> por: " + oponentes[3].getNome()+ "</html>");
      
        
        oponentes[4] = new Oponente();
        oponentes[4].setNome("Louva-Deus");
        oponentes[4].setVida(500);
        oponentes[4].setAtaque(300);    
        oponentes[4].setDescricao("<html> Cuidado por onde andas! <br> por: " + oponentes[4].getNome()+"</html>");
        
    } catch (Exception e) {
        CaixaDeDialogo.obterinstancia().exibirMensagem(e.getMessage().toString(),"ERRO",'e');
    }
        for (x = 0; x <5; x++) {
        if (x==numero) {
            lblImagemB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/personagens/"+oponentes[x].getNome().toLowerCase()+".gif")));
            return oponentes[x];
        }
        }
    return null;
    }
     
    private void mostrarPersonagem() {
        txtNomeP.setText(personagem.getNome());
        txtClasseP.setText(personagem.getClasse());
        txtNivelP.setText(String.valueOf(personagem.getNivel()));
        txtAtaqueP.setText(String.valueOf(personagem.getAtaque()));
        
        prbVidaPersonagem.setMaximum(vidaMaximaPersonagem);
        prbVidaPersonagem.setMinimum(0);
        prbVidaPersonagem.setValue(personagem.getVida());
        prbVidaPersonagem.setStringPainted(true); 
        prbVidaPersonagem.setString(String.valueOf(personagem.getVida()));

    }
    
    private void mostrarOponente() {
         //Preenche o Oponente
        txtNomeB.setText(oponentes[x].getNome());
        txtAtaqueB.setText(String.valueOf(oponentes[x].getAtaque()));
        txtDescB.setText(oponentes[x].getDescricao());
        prbVidaOponente.setMaximum(vidaMaximaOponente);
        prbVidaOponente.setMinimum(0);
        prbVidaOponente.setValue(oponentes[x].getVida());
        prbVidaOponente.setStringPainted(true); 
        prbVidaOponente.setString(String.valueOf(oponentes[x].getVida()));
        
        prbExperiencia.setMaximum(6000);
        prbExperiencia.setMinimum(0);
        prbExperiencia.setValue(personagem.getExperiencia());
        prbExperiencia.setStringPainted(true); 
        prbExperiencia.setString(String.valueOf(personagem.getExperiencia()));
    }
    
    private void ataquePersonagem() {
        //Personagem ataca o oponente
       int valorDado = gerador.nextInt(20) + 1;
        if ((valorDado > 13) && (JrSkill2.isSelected()) || (JrSkill3.isSelected())) { //Ataque Critico 
           ataque = personagem.getAtaque() / 2;
           ataqueCritico = "(Ataque Crítico)";
        } else {
           ataque = personagem.getAtaque() / 3;
           ataqueCritico = "";
        }
        System.out.println("DADO = " + valorDado);
        System.out.println("Ataque = " + ataque);
        
        //Vez do ataque e tempo    
        lblAtkPersonagem.setText("Aguarde o ataque");
        tempo = new Timer(400, new ActionListener() {//vai esperar 5 segundos e executar essa ação
        @Override
        public void actionPerformed(ActionEvent e) {
               lblAtkPersonagem.setText("Seu ataque foi de: " + ataque + " " + ataqueCritico); //removo o conteudo do text, ou remove da tela, faz qualquer coisa
               tempo.stop();//paro a contagem, pra não ser executado de novo
        }
        });
        tempo.start();
        
        int vidaRestante = (oponentes[x].getVida() - ataque);
        System.out.println("Vida restante do Oponente: " + vidaRestante);
        oponentes[x].setVida(vidaRestante);  
  }
    private void ataqueOponente() {
        //Oponente ataca o personagem
        int valorDado = gerador.nextInt(20) + 1;
        if (valorDado > 17) { //Ataque Critico 
            ataque = oponentes[x].getAtaque() / 2;
        } else {
            ataque = oponentes[x].getAtaque() / 4;
        }
        System.out.println("DADO = " + valorDado);
        System.out.println("Ataque = " + ataque);
        
       //Vez do ataque e tempo    
        lblAtkOponente.setText("Aguarde o ataque");
        tempo = new Timer(400, new ActionListener() {//vai esperar 5 segundos e executar essa ação
        @Override
        public void actionPerformed(ActionEvent e) {
               lblAtkOponente.setText("O ataque do seu oponente foi de: " + ataque); //removo o conteudo do text, ou remove da tela, faz qualquer coisa
               tempo.stop();//paro a contagem, pra não ser executado de novo
        }
        });
        tempo.start();

        int vidaRestante = personagem.getVida() - ataque;
        System.out.println("Vida restante do Personagem: " + vidaRestante);
        personagem.setVida(vidaRestante); 
 
 }
    
    public void limparLabels() {
        lblAtkPersonagem.setText("");
        lblAtkOponente.setText("");
        lblVezPersonagem.setText("");
        lblVezOponente.setText("");    
    }
    
    private void skillsPersonagem() {
        lblSkill1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/skill1.png")));
        lblSkill2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/skill2.png")));
        lblSkill3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/skill3.png")));
    }
    
    private void validarVida() {
         if (personagem.getVida() >=1) {
         mostrarPersonagem();
         } else {
         mostrarPersonagem();
         CaixaDeDialogo.obterinstancia().exibirMensagem("<html><center><b>GAME OVER</b></center>Você foi derrotado!<br>Esperamos que você esteja mais forte na próxima luta.<br>" + oponentes[x].getNome()+"</html>","GAME OVER",'e');
         personagem.setVida(0);
         ViewPersonagem tela = new ViewPersonagem(personagem);
         tela.setVisible(true);
         this.setVisible(false);
         } 
    }
    
    private void vidaMenor200() {
        if (personagem.getVida() < 200) {
        boolean wResposta = CaixaDeDialogo.obterinstancia().pedirConfirmacao("Atenção sua vida está abaixo de 200\nDeseja continuar lutando?","Vida",'p');         
        if (wResposta == true) {
            gerarOponente();
            limparLabels();
            mostrarOponente();
        } else {
            limparLabels();
            ViewPersonagem telaP = new ViewPersonagem(personagem);
            telaP.setVisible(true);
         }
        }
    }
    
    public void ajustaCor() {
           try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewConfronto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ViewConfronto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ViewConfronto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ViewConfronto.class.getName()).log(Level.SEVERE, null, ex);
        }
      }

    public static void upaNivel(int exp) {
        switch (exp) {
        case 300:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 1!","Parabéns",'i');         
        case 600:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 2!","Parabéns",'i'); 
        case 900:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 3!","Parabéns",'i'); 
        case 1200:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 4!","Parabéns",'i'); 
        case 1500:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 5!","Parabéns",'i'); 
        case 1800:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 6!","Parabéns",'i'); 
        case 2100:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 7!","Parabéns",'i'); 
        case 2400:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 8!","Parabéns",'i'); 
        case 2700:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 9!","Parabéns",'i'); 
        case 3000:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 10!","Parabéns",'i'); 
        case 3300:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 11!","Parabéns",'i'); 
        case 3600:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 12!","Parabéns",'i'); 
        case 3900:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 13!","Parabéns",'i'); 
        case 4200:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 14!","Parabéns",'i'); 
        case 4500:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 15!","Parabéns",'i'); 
        case 4800:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 16!","Parabéns",'i'); 
        case 5100:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 17!","Parabéns",'i'); 
        case 5400:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 18!","Parabéns",'i'); 
        case 5700:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 19!","Parabéns",'i'); 
        case 6000:
        CaixaDeDialogo.obterinstancia().exibirMensagem("Parabéns você chegou ao nível 20!","Parabéns",'i'); 
        }
    }
    
    private void telaAtributos () {
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoSkills;
    private javax.swing.JRadioButton JrSkill1;
    private javax.swing.JRadioButton JrSkill2;
    private javax.swing.JRadioButton JrSkill3;
    private javax.swing.JToggleButton btnAtacar;
    private javax.swing.JButton btnDuelo;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAtaqueB;
    private javax.swing.JLabel lblAtaqueP;
    private javax.swing.JLabel lblAtkOponente;
    private javax.swing.JLabel lblAtkPersonagem;
    private javax.swing.JLabel lblBatalha;
    private javax.swing.JLabel lblClasseP;
    private javax.swing.JLabel lblImagemB;
    private javax.swing.JLabel lblImagemP;
    private javax.swing.JLabel lblNivelP;
    private javax.swing.JLabel lblNomeB;
    private javax.swing.JLabel lblNomeP;
    private javax.swing.JLabel lblSkill1;
    private javax.swing.JLabel lblSkill2;
    private javax.swing.JLabel lblSkill3;
    private javax.swing.JLabel lblVezOponente;
    private javax.swing.JLabel lblVezPersonagem;
    private javax.swing.JLabel lblVidaB;
    private javax.swing.JLabel lblVidaP;
    private javax.swing.JLabel lblX;
    private javax.swing.JProgressBar prbExperiencia;
    private javax.swing.JProgressBar prbVidaOponente;
    private javax.swing.JProgressBar prbVidaPersonagem;
    private javax.swing.JLabel txtAtaqueB;
    private javax.swing.JLabel txtAtaqueP;
    private javax.swing.JLabel txtClasseP;
    private javax.swing.JLabel txtDescB;
    private javax.swing.JLabel txtNivelP;
    private javax.swing.JLabel txtNomeB;
    private javax.swing.JLabel txtNomeP;
    // End of variables declaration//GEN-END:variables
}
